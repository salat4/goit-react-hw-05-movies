{"version":3,"file":"static/js/186.a25b0a9e.chunk.js","mappings":"+NAsCA,UAlCgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAaC,EAAAA,EAAAA,MAAbD,SASN,OARAE,EAAAA,EAAAA,YAAU,WAAI,wCACV,oGACwBC,EAAAA,GAAiBH,GADzC,OACUI,EADV,OAEIL,EAAWK,GAFf,4CADU,uBAAC,WAAD,wBAKVC,KACF,CAACL,IACHM,QAAQC,IAAIT,IAER,yBACKA,IACI,wBAC+B,IAA3BA,EAAQU,QAAQC,QAAe,oEAEhCX,EAAQU,QAAQE,KAAI,SAACC,GAAD,OAChB,2BACI,qCAAaA,EAAOC,WACpB,uBACKD,EAAOE,sB,0MCtBxCC,IAAAA,SAAAA,QAAyB,+BAIlB,IAAMC,EAAU,mCAAG,6GAEKD,IAAAA,IAAU,gEAFf,cAEZE,EAFY,yBAGXA,EAASC,MAHE,gCAKlBX,QAAQY,MAAR,MALkB,yDAAH,qDAUVC,EAAY,mCAAG,WAAMnB,GAAN,gGAEGc,IAAAA,IAAA,iBAAoBd,EAApB,4DAAuFA,GAF1F,cAEdgB,EAFc,yBAGbA,EAASC,MAHI,gCAKpBX,QAAQY,MAAR,MALoB,yDAAH,sDAQZE,EAAS,mCAAG,WAAMpB,GAAN,gGAEMc,IAAAA,IAAA,iBAAoBd,EAApB,oEAA+FA,GAFrG,cAEXgB,EAFW,yBAGVA,EAASC,MAHC,gCAKjBX,QAAQY,MAAR,MALiB,yDAAH,sDAQTb,EAAY,mCAAG,WAAML,GAAN,gGAEGc,IAAAA,IAAA,iBAAoBd,EAApB,oEAA+FA,GAFlG,cAEdgB,EAFc,yBAGbA,EAASC,MAHI,gCAKpBX,QAAQY,MAAR,MALoB,yDAAH,sDAQZG,EAAW,mCAAG,WAAMC,GAAN,gGAEIR,IAAAA,IAAA,sFAAyFQ,EAAzF,+BAA4HA,GAFhI,cAEbN,EAFa,yBAGZA,EAASC,MAHG,gCAKnBX,QAAQY,MAAR,MALmB,yDAAH","sources":["components/Reviews/Reviews.jsx","services/FetchData.jsx"],"sourcesContent":["import * as API from \"services/FetchData\";\nimport { useParams} from \"react-router-dom\";\nimport { useEffect,useState } from \"react\";\n\nconst Reviews = () =>{\n    const [rewiews, setRewiews] = useState(null)\n    let { movie_id } = useParams();\n    useEffect(()=>{\n        async function FetchRewiews(){\n            const movie = await API.FetchRewiews(movie_id)\n            setRewiews(movie)\n        }\n        FetchRewiews()\n    },[movie_id])\n    console.log(rewiews)\n    return(\n        <div>\n            {rewiews&&(\n                 <ul>\n                    {rewiews.results.length === 0 ? <p>We don`t have any rewiews for this movie</p>\n                    :\n                    rewiews.results.map((rewiew)=>(\n                        <li>\n                            <p>Author : {rewiew.author}</p>\n                            <p>\n                                {rewiew.content}\n                            </p>\n                        </li>\n        ))\n                    }\n                 {}\n        </ul>\n            )}\n           \n        </div>\n    )\n   \n}\nexport default Reviews;","import axios from \"axios\";\n// import React, {useState, useEffect} from \"react\"\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\n\n\n\nexport const FetchTrend = async() =>{\n    try {\n        const response = await axios.get('/trending/movie/day?api_key=515070e14c853494df330daa7406d141');\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\n    \n\nexport const FetchDetails = async(movie_id) =>{\n    try {\n        const response = await axios.get(`/movie/${movie_id}?api_key=515070e14c853494df330daa7406d141&language=en-US`,movie_id);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\nexport const FetchCast = async(movie_id) =>{\n    try {\n        const response = await axios.get(`/movie/${movie_id}/credits?api_key=515070e14c853494df330daa7406d141&language=en-US`,movie_id);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\nexport const FetchRewiews = async(movie_id) =>{\n    try {\n        const response = await axios.get(`/movie/${movie_id}/reviews?api_key=515070e14c853494df330daa7406d141&language=en-US`,movie_id);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\nexport const FetchSearch = async(query) =>{\n    try {\n        const response = await axios.get(`/search/movie?api_key=515070e14c853494df330daa7406d141&language=en-US&query=${query}&page=1&include_adult=false`,query);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\n"],"names":["useState","rewiews","setRewiews","movie_id","useParams","useEffect","API","movie","FetchRewiews","console","log","results","length","map","rewiew","author","content","axios","FetchTrend","response","data","error","FetchDetails","FetchCast","FetchSearch","query"],"sourceRoot":""}