{"version":3,"file":"static/js/184.9e77c549.chunk.js","mappings":"qPAMMA,EAAMC,EAAAA,GAAAA,IAAH,gEAmDT,UA9CmB,WACf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,WAChBC,EAAAA,EAAAA,YAAU,WAAI,wCACV,oGACwBC,EAAAA,GAAgBP,GADxC,OACUQ,EADV,OAEIL,EAAUK,GAFd,4CADU,sBAKNJ,EAAQK,QALD,WAAD,wBASVC,GAHIN,EAAQK,SAAU,IAKxB,CAACT,IAMP,OACI,iCAIA,kBAAMW,SAVgB,SAACC,GACnBA,EAAEC,iBACFZ,EAASW,EAAEE,OAAOC,SAASf,MAAMgB,OACjCJ,EAAEE,OAAOG,SAOb,WACI,kBAAQC,KAAK,OAAOC,KAAK,WACzB,mBAAQD,KAAK,SAAb,uBAGPhB,IACG,SAACL,EAAD,UACKK,EAAOkB,QAAQC,KAAI,SAACb,GAAD,OACpB,SAAC,KAAD,CAAMc,GAAM,CACTC,SAAS,WAAD,OAAYf,EAAMgB,KAD7B,SAGoBhB,EAAMiB,OAAjBjB,EAAMgB,c,0MC7CvBE,IAAAA,SAAAA,QAAyB,+BAIlB,IAAMC,EAAU,mCAAG,6GAEKD,IAAAA,IAAU,gEAFf,cAEZE,EAFY,yBAGXA,EAASC,MAHE,gCAKlBC,QAAQC,MAAR,MALkB,yDAAH,qDAUVC,EAAY,mCAAG,WAAMC,GAAN,gGAEGP,IAAAA,IAAA,iBAAoBO,EAApB,4DAAuFA,GAF1F,cAEdL,EAFc,yBAGbA,EAASC,MAHI,gCAKpBC,QAAQC,MAAR,MALoB,yDAAH,sDAQZG,EAAS,mCAAG,WAAMD,GAAN,gGAEMP,IAAAA,IAAA,iBAAoBO,EAApB,oEAA+FA,GAFrG,cAEXL,EAFW,yBAGVA,EAASC,MAHC,gCAKjBC,QAAQC,MAAR,MALiB,yDAAH,sDAQTI,EAAY,mCAAG,WAAMF,GAAN,gGAEGP,IAAAA,IAAA,iBAAoBO,EAApB,oEAA+FA,GAFlG,cAEdL,EAFc,yBAGbA,EAASC,MAHI,gCAKpBC,QAAQC,MAAR,MALoB,yDAAH,sDAQZrB,EAAW,mCAAG,WAAMV,GAAN,gGAEI0B,IAAAA,IAAA,sFAAyF1B,EAAzF,+BAA4HA,GAFhI,cAEb4B,EAFa,yBAGZA,EAASC,MAHG,gCAKnBC,QAAQC,MAAR,MALmB,yDAAH","sources":["components/MoviesPage/MoviesPage.jsx","services/FetchData.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport * as API from \"services/FetchData\";\nimport styled from 'styled-components';\n\n// import { ,} from \"react-router-dom\";\nimport { useEffect,useState,useRef } from \"react\";\nconst Div = styled.div`\ndisplay:flex;\nflex-direction:column ;\n`\n\nconst MoviesPage = () => {\n    const [query, setQuery] = useState(\"\")\n    const [search, setSearch] = useState(null)\n    const mounted = useRef();\n    useEffect(()=>{\n        async function FetchSearch(){\n            const movie = await API.FetchSearch(query)\n            setSearch(movie)\n        }\n        if(!mounted.current){\n            mounted.current = true\n              }\n              else {\n        FetchSearch()\n    }\n    },[query])\n    const handleSubmit  = (e) => {\n        e.preventDefault();\n        setQuery(e.target.elements.query.value);\n        e.target.reset();\n    }\nreturn (\n    <>\n  \n    {/* <Outlet/> */}\n\n    <form onSubmit={handleSubmit}>\n        <input  type=\"text\" name=\"query\"></input>\n        <button type=\"submit\">Search</button>\n        </form>\n\n{search &&\n    <Div>\n        {search.results.map((movie) =>(\n        <Link to = {{\n           pathname:`/movies/${movie.id}`      \n        }\n        } key = {movie.id}>{movie.title}\n        </Link>\n    ))}\n    </Div>}\n\n    \n    </>\n)\n}\nexport default MoviesPage;\n","import axios from \"axios\";\n// import React, {useState, useEffect} from \"react\"\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\"\n\n\n\nexport const FetchTrend = async() =>{\n    try {\n        const response = await axios.get('/trending/movie/day?api_key=515070e14c853494df330daa7406d141');\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\n    \n\nexport const FetchDetails = async(movie_id) =>{\n    try {\n        const response = await axios.get(`/movie/${movie_id}?api_key=515070e14c853494df330daa7406d141&language=en-US`,movie_id);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\nexport const FetchCast = async(movie_id) =>{\n    try {\n        const response = await axios.get(`/movie/${movie_id}/credits?api_key=515070e14c853494df330daa7406d141&language=en-US`,movie_id);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\nexport const FetchRewiews = async(movie_id) =>{\n    try {\n        const response = await axios.get(`/movie/${movie_id}/reviews?api_key=515070e14c853494df330daa7406d141&language=en-US`,movie_id);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\nexport const FetchSearch = async(query) =>{\n    try {\n        const response = await axios.get(`/search/movie?api_key=515070e14c853494df330daa7406d141&language=en-US&query=${query}&page=1&include_adult=false`,query);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n      }\n}\n"],"names":["Div","styled","useState","query","setQuery","search","setSearch","mounted","useRef","useEffect","API","movie","current","FetchSearch","onSubmit","e","preventDefault","target","elements","value","reset","type","name","results","map","to","pathname","id","title","axios","FetchTrend","response","data","console","error","FetchDetails","movie_id","FetchCast","FetchRewiews"],"sourceRoot":""}